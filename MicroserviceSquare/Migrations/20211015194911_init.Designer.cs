// <auto-generated />
using System;
using MicroserviceSquare.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MicroserviceSquare.Migrations
{
    [DbContext(typeof(SquareCatalogContext))]
    [Migration("20211015194911_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MicroserviceSquare.Models.Delegation", b =>
                {
                    b.Property<string>("DelegationId")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DelegationId");

                    b.ToTable("Delegations");
                });

            modelBuilder.Entity("MicroserviceSquare.Models.Lane", b =>
                {
                    b.Property<int>("LaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NumberGea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberProvider")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("SquareId")
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("TypeLaneId")
                        .HasColumnType("int");

                    b.HasKey("LaneId");

                    b.HasIndex("SectionId");

                    b.HasIndex("SquareId");

                    b.HasIndex("TypeLaneId")
                        .IsUnique();

                    b.ToTable("Lanes");
                });

            modelBuilder.Entity("MicroserviceSquare.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SquareId")
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("SectionId");

                    b.HasIndex("SquareId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("MicroserviceSquare.Models.Square", b =>
                {
                    b.Property<string>("SquareId")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("DelegationId")
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SquareId");

                    b.HasIndex("DelegationId");

                    b.ToTable("Squares");
                });

            modelBuilder.Entity("MicroserviceSquare.Models.TypeLane", b =>
                {
                    b.Property<int>("TypeLaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeLaneId");

                    b.ToTable("TypeLanes");
                });

            modelBuilder.Entity("MicroserviceSquare.Models.Lane", b =>
                {
                    b.HasOne("MicroserviceSquare.Models.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId");

                    b.HasOne("MicroserviceSquare.Models.Square", "Square")
                        .WithMany()
                        .HasForeignKey("SquareId");

                    b.HasOne("MicroserviceSquare.Models.TypeLane", "TypeLane")
                        .WithOne("Lane")
                        .HasForeignKey("MicroserviceSquare.Models.Lane", "TypeLaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("Square");

                    b.Navigation("TypeLane");
                });

            modelBuilder.Entity("MicroserviceSquare.Models.Section", b =>
                {
                    b.HasOne("MicroserviceSquare.Models.Square", "Square")
                        .WithMany()
                        .HasForeignKey("SquareId");

                    b.Navigation("Square");
                });

            modelBuilder.Entity("MicroserviceSquare.Models.Square", b =>
                {
                    b.HasOne("MicroserviceSquare.Models.Delegation", "Delegation")
                        .WithMany()
                        .HasForeignKey("DelegationId");

                    b.Navigation("Delegation");
                });

            modelBuilder.Entity("MicroserviceSquare.Models.TypeLane", b =>
                {
                    b.Navigation("Lane");
                });
#pragma warning restore 612, 618
        }
    }
}
